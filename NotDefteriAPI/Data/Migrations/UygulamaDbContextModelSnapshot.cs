// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NotDefteriAPI.Data;

#nullable disable

namespace NotDefteriAPI.Data.Migrations
{
    [DbContext(typeof(UygulamaDbContext))]
    partial class UygulamaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NotDefteriAPI.Data.Not", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("DegistirmeZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icerik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OlusturulmaZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Notlar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Baslik = "Alinacaklar",
                            DegistirmeZamani = new DateTime(2023, 2, 1, 14, 38, 22, 634, DateTimeKind.Local).AddTicks(4259),
                            Icerik = "1.Bot\n2.Kod\n3.Pot",
                            OlusturulmaZamani = new DateTime(2023, 2, 1, 14, 38, 22, 634, DateTimeKind.Local).AddTicks(4252)
                        },
                        new
                        {
                            Id = 2,
                            Baslik = "Ozlu Sozler",
                            DegistirmeZamani = new DateTime(2023, 2, 1, 14, 38, 22, 634, DateTimeKind.Local).AddTicks(4261),
                            Icerik = "1.Yemek ye\n2.Dua et\n3.Sev",
                            OlusturulmaZamani = new DateTime(2023, 2, 1, 14, 38, 22, 634, DateTimeKind.Local).AddTicks(4260)
                        },
                        new
                        {
                            Id = 3,
                            Baslik = "Gezilecek Yerler",
                            DegistirmeZamani = new DateTime(2023, 2, 1, 14, 38, 22, 634, DateTimeKind.Local).AddTicks(4262),
                            Icerik = "1.Ankara\n2.Istanbul\n3.Izmir",
                            OlusturulmaZamani = new DateTime(2023, 2, 1, 14, 38, 22, 634, DateTimeKind.Local).AddTicks(4261)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
